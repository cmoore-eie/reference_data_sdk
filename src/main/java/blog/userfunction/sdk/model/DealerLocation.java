/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package blog.userfunction.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DealerLocation
 */
@JsonPropertyOrder({
  DealerLocation.JSON_PROPERTY_LOCATION_NAME,
  DealerLocation.JSON_PROPERTY_ADDRESS_LINE1,
  DealerLocation.JSON_PROPERTY_ADDRESS_LINE2,
  DealerLocation.JSON_PROPERTY_CITY,
  DealerLocation.JSON_PROPERTY_POST_CODE,
  DealerLocation.JSON_PROPERTY_PURGE,
  DealerLocation.JSON_PROPERTY_ITEM_IDENTIFIER,
  DealerLocation.JSON_PROPERTY_DEALER
})

public class DealerLocation {
  public static final String JSON_PROPERTY_LOCATION_NAME = "locationName";
  private String locationName;

  public static final String JSON_PROPERTY_ADDRESS_LINE1 = "addressLine1";
  private String addressLine1;

  public static final String JSON_PROPERTY_ADDRESS_LINE2 = "addressLine2";
  private String addressLine2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_POST_CODE = "postCode";
  private String postCode;

  public static final String JSON_PROPERTY_PURGE = "purge";
  private JsonNullable<Boolean> purge = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ITEM_IDENTIFIER = "itemIdentifier";
  private String itemIdentifier;

  public static final String JSON_PROPERTY_DEALER = "dealer";
  private JsonNullable<String> dealer = JsonNullable.<String>undefined();


  public DealerLocation locationName(String locationName) {
    
    this.locationName = locationName;
    return this;
  }

   /**
   * Get locationName
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public DealerLocation addressLine1(String addressLine1) {
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Get addressLine1
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public DealerLocation addressLine2(String addressLine2) {
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Get addressLine2
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public DealerLocation city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public DealerLocation postCode(String postCode) {
    
    this.postCode = postCode;
    return this;
  }

   /**
   * Get postCode
   * @return postCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostCode() {
    return postCode;
  }


  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }


  public DealerLocation purge(Boolean purge) {
    this.purge = JsonNullable.<Boolean>of(purge);
    
    return this;
  }

   /**
   * Get purge
   * @return purge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getPurge() {
        return purge.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PURGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPurge_JsonNullable() {
    return purge;
  }
  
  @JsonProperty(JSON_PROPERTY_PURGE)
  public void setPurge_JsonNullable(JsonNullable<Boolean> purge) {
    this.purge = purge;
  }

  public void setPurge(Boolean purge) {
    this.purge = JsonNullable.<Boolean>of(purge);
  }


  public DealerLocation itemIdentifier(String itemIdentifier) {
    
    this.itemIdentifier = itemIdentifier;
    return this;
  }

   /**
   * Get itemIdentifier
   * @return itemIdentifier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemIdentifier() {
    return itemIdentifier;
  }


  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }


  public DealerLocation dealer(String dealer) {
    this.dealer = JsonNullable.<String>of(dealer);
    
    return this;
  }

   /**
   * Get dealer
   * @return dealer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDealer() {
        return dealer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEALER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDealer_JsonNullable() {
    return dealer;
  }
  
  @JsonProperty(JSON_PROPERTY_DEALER)
  public void setDealer_JsonNullable(JsonNullable<String> dealer) {
    this.dealer = dealer;
  }

  public void setDealer(String dealer) {
    this.dealer = JsonNullable.<String>of(dealer);
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DealerLocation dealerLocation = (DealerLocation) o;
    return Objects.equals(this.locationName, dealerLocation.locationName) &&
        Objects.equals(this.addressLine1, dealerLocation.addressLine1) &&
        Objects.equals(this.addressLine2, dealerLocation.addressLine2) &&
        Objects.equals(this.city, dealerLocation.city) &&
        Objects.equals(this.postCode, dealerLocation.postCode) &&
        Objects.equals(this.purge, dealerLocation.purge) &&
        Objects.equals(this.itemIdentifier, dealerLocation.itemIdentifier) &&
        Objects.equals(this.dealer, dealerLocation.dealer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationName, addressLine1, addressLine2, city, postCode, purge, itemIdentifier, dealer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DealerLocation {\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    purge: ").append(toIndentedString(purge)).append("\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    dealer: ").append(toIndentedString(dealer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

